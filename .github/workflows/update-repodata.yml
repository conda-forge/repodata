on:
  pull_request:
    types: ['opened', 'synchronize', 'reopened']
  schedule:
    - cron:  '0,20,40 * * * *'

jobs:
  update_shards:
    name: update repodata shards
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          depth: 0
          fetch-depth: 0
      - uses: goanpeca/setup-miniconda@v1
        with:
          python-version: 3.7
          channels: conda-forge,defaults
          channel-priority: strict
          show-channel-urls: true
      - name: make repodata
        shell: bash -l {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          conda install -y -q git

          pushd ..
          git clone --depth=1 https://github.com/regro/repodata-tools.git
          rt_pth=`pwd`/repodata-tools
          popd

          conda install -y -q --file ${rt_pth}/requirements.txt

          tm=$(python -c "import datetime; print(datetime.datetime.utcnow().strftime('%Y.%m.%d.%H.%M.%S'))")
          git config --global user.email 'becker.mr@gmail.com'
          git config --global user.name 'beckermr'

          pushd ..
          git clone --depth=1 https://github.com/regro/repodata-shards.git
          rd_pth=`pwd`/repodata-shards
          popd

          pushd ..
          mkdir -p index_pages
          gh_pages_pth=`pwd`/index_pages
          popd

          pushd ${GITHUB_WORKSPACE}
          python ${rt_pth}/scripts/make_repodata.py ${tm} ${rd_pth}
          python ${rt_pth}/scripts/make_channeldata.py ${tm} ${rd_pth}

          ls -lah *

          if [[ ${GITHUB_REF} == "refs/heads/master" ]]; then
            python ${rt_pth}/scripts/make_repodata_release.py ${tm} ${rd_pth}

            python ${rt_pth}/scripts/make_index_pages.py ${gh_pages_pth}
            git stash
            git checkout gh-pages
            repo_url=https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
            git remote set-url --push origin ${repo_url}
            cp -r ${gh_pages_pth}/* .
            git add *
            git commit --allow-empty -am "[ci skip] repodata pages update"
            git push
            popd

          fi
          popd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
